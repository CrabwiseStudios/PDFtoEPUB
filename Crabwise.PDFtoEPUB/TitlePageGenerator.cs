using System;
using System.Collections.Generic;
using System.Text;

namespace Crabwise.PDFtoEPUB
{
    public class TitlePageGenerator
    {
        public static byte[] GetTitlePage(ConversionOptions options)
        {
            StringBuilder titleBuilder = new StringBuilder();
            titleBuilder.AppendLine("<?xml version=\"1.0\" encoding=\"iso-8859\"?>");
            titleBuilder.AppendLine("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">");
            titleBuilder.AppendLine("<html xmlns=\"http://www.w3.org/1999/xhtml\">");
            
            titleBuilder.AppendLine("<head>");
            
            titleBuilder.AppendLine("<title>");
            titleBuilder.Append(options.Title);
            titleBuilder.Append("</title>");

            titleBuilder.AppendLine("<link href=\"stylesheet.css\" type=\"text/css\" rel=\"stylesheet\" />");
            titleBuilder.AppendLine("<link rel=\"stylesheet\" type=\"application/vnd.adobe-page-template+xml\" href=\"page-template.xpgt\"/>");

            titleBuilder.AppendLine("</head>");

            titleBuilder.AppendLine("<body>");
            titleBuilder.AppendLine("<div>");
            titleBuilder.AppendLine("<p>");
            titleBuilder.Append("&nbsp");
            titleBuilder.Append("</p>");

            titleBuilder.AppendLine("<h2>");
            titleBuilder.Append(options.Title);
            titleBuilder.Append("</h2>");

            titleBuilder.AppendLine("<p>&nbsp</p>");

            titleBuilder.AppendLine("<h3>");
            titleBuilder.Append(options.Author);
            titleBuilder.Append("</h3>");

            titleBuilder.AppendLine("<p>&nbsp</p>");
            titleBuilder.AppendLine("<h7>Generated by PDFtoEPUB (www.crabwisestudios.com/PDFtoEPUB/Overview)</h7>");

            titleBuilder.AppendLine("</div></body></html>");

            byte[] titleBytes = Encoding.ASCII.GetBytes(titleBuilder.ToString());

            return titleBytes;
        }
    }
}
